{"mappings":"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","sources":["<anon>","script.js","background.js"],"sourcesContent":["\n// Petal animation for SheSpeaks 2025\nclass $679004e59b84d8fa$var$Petal {\n    constructor(){\n        this.x = Math.random() * window.innerWidth;\n        this.y = Math.random() * -100;\n        this.size = Math.random() * 15 + 5;\n        this.speed = Math.random() * 1 + 0.5;\n        this.rotation = Math.random() * 360;\n        this.rotationSpeed = (Math.random() - 0.5) * 2;\n        this.swingAmount = Math.random() * 3;\n        this.swingSpeed = Math.random() * 0.02;\n        this.swingOffset = Math.random() * Math.PI * 2;\n        this.opacity = Math.random() * 0.6 + 0.4;\n        this.hue = Math.random() * 30 + 330; // Pink hues\n    }\n    update() {\n        this.y += this.speed;\n        this.x += Math.sin(this.y * this.swingSpeed + this.swingOffset) * this.swingAmount;\n        this.rotation += this.rotationSpeed;\n        // Reset when off screen\n        if (this.y > window.innerHeight + 100) {\n            this.y = Math.random() * -100;\n            this.x = Math.random() * window.innerWidth;\n        }\n    }\n    draw(ctx) {\n        ctx.save();\n        ctx.translate(this.x, this.y);\n        ctx.rotate(this.rotation * Math.PI / 180);\n        ctx.globalAlpha = this.opacity;\n        // Create petal shape\n        ctx.beginPath();\n        ctx.fillStyle = `hsla(${this.hue}, 100%, 80%, ${this.opacity})`;\n        ctx.ellipse(0, 0, this.size, this.size / 2, 0, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.restore();\n    }\n}\nclass $679004e59b84d8fa$var$PetalAnimation {\n    constructor(){\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.id = 'bg-canvas';\n        document.body.insertBefore(this.canvas, document.body.firstChild);\n        this.petals = [];\n        this.init();\n        window.addEventListener('resize', ()=>this.resize());\n        this.animate();\n    }\n    init() {\n        this.resize();\n        // Create petals\n        const numPetals = Math.floor(window.innerWidth / 15); // Adjust density\n        for(let i = 0; i < numPetals; i++)this.petals.push(new $679004e59b84d8fa$var$Petal());\n    }\n    resize() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n    }\n    animate() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.petals.forEach((petal)=>{\n            petal.update();\n            petal.draw(this.ctx);\n        });\n        requestAnimationFrame(()=>this.animate());\n    }\n}\n// Start animation when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    new $679004e59b84d8fa$var$PetalAnimation();\n});\n\n\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    // Firebase initialization using only environment variables\n    const firebaseConfig = {\n        apiKey: \"AIzaSyCCEYnTrQHvM_WFMUCGay9JO-jtwaYkQ0Q\",\n        authDomain: \"she-speaks-2025.firebaseapp.com\",\n        projectId: \"she-speaks-2025\",\n        storageBucket: \"she-speaks-2025.firebasestorage.app\",\n        messagingSenderId: \"908378026473\",\n        appId: \"1:908378026473:web:e5a3026c96c7894dc51b78\",\n        measurementId: \"G-VLYD379V3R\"\n    };\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    // Initialize Firestore\n    const db = firebase.firestore();\n    // Form elements\n    const form = document.getElementById('sheSpeaksForm');\n    const sections = document.querySelectorAll('.form-section');\n    const progressFill = document.getElementById('progressFill');\n    const progressText = document.getElementById('progressText');\n    const thankYou = document.getElementById('thankYou');\n    const submitBtn = document.getElementById('submitBtn');\n    const finalSubmitBtn = document.getElementById('finalSubmitBtn');\n    // Navigation buttons\n    const nextButtons = document.querySelectorAll('.next-btn');\n    const prevButtons = document.querySelectorAll('.prev-btn');\n    // Range sliders\n    const sliders = document.querySelectorAll('input[type=\"range\"]');\n    // Current section tracker\n    let currentSection = 1;\n    const totalSections = sections.length;\n    // Update progress bar\n    const updateProgress = ()=>{\n        const progressPercentage = (currentSection - 1) / (totalSections - 1) * 100;\n        progressFill.style.width = `${progressPercentage}%`;\n        // Update progress text\n        if (currentSection === 1) progressText.textContent = \"Let's begin your story...\";\n        else if (currentSection === totalSections) progressText.textContent = \"Final step \\u2014 almost done!\";\n        else progressText.textContent = `Section ${currentSection} of ${totalSections}`;\n    };\n    // Show a specific section\n    const showSection = (sectionNumber)=>{\n        sections.forEach((section)=>{\n            section.classList.remove('active');\n            section.style.display = 'none';\n        });\n        const targetSection = document.querySelector(`.form-section[data-section=\"${sectionNumber}\"]`);\n        if (targetSection) {\n            targetSection.classList.add('active');\n            targetSection.style.display = 'block';\n            // Smooth scroll to top of section\n            window.scrollTo({\n                top: targetSection.offsetTop - 50,\n                behavior: 'smooth'\n            });\n        }\n        updateProgress();\n    };\n    // Initialize form - show first section\n    const initForm = ()=>{\n        sections.forEach((section, index)=>{\n            if (index === 0) {\n                section.classList.add('active');\n                section.style.display = 'block';\n            } else section.style.display = 'none';\n        });\n        updateProgress();\n    };\n    // Next button handler\n    nextButtons.forEach((button)=>{\n        button.addEventListener('click', ()=>{\n            if (currentSection < totalSections) {\n                currentSection++;\n                showSection(currentSection);\n            }\n        });\n    });\n    // Previous button handler\n    prevButtons.forEach((button)=>{\n        button.addEventListener('click', ()=>{\n            if (currentSection > 1) {\n                currentSection--;\n                showSection(currentSection);\n            }\n        });\n    });\n    // Final submit button handler\n    finalSubmitBtn.addEventListener('click', ()=>{\n        submitBtn.click(); // Trigger the actual form submission\n    });\n    // Handle form submission\n    form.addEventListener('submit', async (e)=>{\n        e.preventDefault();\n        try {\n            // Get all form data\n            const formData = new FormData(form);\n            const formDataObj = {};\n            // Get checkbox values for \"help\" question (multiple selection)\n            const helpCheckboxes = document.querySelectorAll('input[name=\"help\"]:checked');\n            const helpValues = Array.from(helpCheckboxes).map((checkbox)=>checkbox.value);\n            // Convert FormData to a regular object\n            formData.forEach((value, key)=>{\n                // Skip \"help\" as we handle it separately\n                if (key !== \"help\") formDataObj[key] = value;\n            });\n            // Add the \"help\" values as an array\n            formDataObj.help = helpValues;\n            // Add timestamp\n            formDataObj.submittedAt = firebase.firestore.FieldValue.serverTimestamp();\n            console.log(\"Submitting data to Firebase:\", formDataObj);\n            // Save to Firestore\n            await db.collection('responses').add(formDataObj);\n            console.log('Form data saved to Firebase successfully!');\n            // Hide form\n            form.style.display = 'none';\n            // Show thank you message\n            thankYou.style.display = 'block';\n            // Update progress bar and text\n            progressFill.style.width = '100%';\n            progressText.textContent = 'Thank you for your voice!';\n            // Scroll to top\n            window.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n            });\n        } catch (error) {\n            console.error('Error saving to Firebase:', error);\n            alert('There was an error submitting your response. Please try again later.');\n        }\n    });\n    // Update slider values when moved\n    sliders.forEach((slider)=>{\n        const valueDisplay = document.querySelector(`.slider-value[data-slider=\"${slider.name}\"]`);\n        slider.addEventListener('input', ()=>{\n            if (valueDisplay) valueDisplay.textContent = slider.value;\n        });\n    });\n    // Initialize form\n    initForm();\n});\n\n\n//# sourceMappingURL=SheSpeaks_2025_ACM-W.40ca248d.js.map\n","import './styles.css';\r\nimport './background.js';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  // Firebase initialization using only environment variables\r\n  const firebaseConfig = {\r\n    apiKey: process.env.FIREBASE_API_KEY,\r\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.FIREBASE_APP_ID,\r\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  // Initialize Firestore\r\n  const db = firebase.firestore();\r\n  \r\n  // Form elements\r\n  const form = document.getElementById('sheSpeaksForm');\r\n  const sections = document.querySelectorAll('.form-section');\r\n  const progressFill = document.getElementById('progressFill');\r\n  const progressText = document.getElementById('progressText');\r\n  const thankYou = document.getElementById('thankYou');\r\n  const submitBtn = document.getElementById('submitBtn');\r\n  const finalSubmitBtn = document.getElementById('finalSubmitBtn');\r\n  \r\n  // Navigation buttons\r\n  const nextButtons = document.querySelectorAll('.next-btn');\r\n  const prevButtons = document.querySelectorAll('.prev-btn');\r\n  \r\n  // Range sliders\r\n  const sliders = document.querySelectorAll('input[type=\"range\"]');\r\n  \r\n  // Current section tracker\r\n  let currentSection = 1;\r\n  const totalSections = sections.length;\r\n  \r\n  // Update progress bar\r\n  const updateProgress = () => {\r\n    const progressPercentage = ((currentSection - 1) / (totalSections - 1)) * 100;\r\n    progressFill.style.width = `${progressPercentage}%`;\r\n    \r\n    // Update progress text\r\n    if (currentSection === 1) {\r\n      progressText.textContent = \"Let's begin your story...\";\r\n    } else if (currentSection === totalSections) {\r\n      progressText.textContent = \"Final step — almost done!\";\r\n    } else {\r\n      progressText.textContent = `Section ${currentSection} of ${totalSections}`;\r\n    }\r\n  };\r\n  \r\n  // Show a specific section\r\n  const showSection = (sectionNumber) => {\r\n    sections.forEach(section => {\r\n      section.classList.remove('active');\r\n      section.style.display = 'none';\r\n    });\r\n    \r\n    const targetSection = document.querySelector(`.form-section[data-section=\"${sectionNumber}\"]`);\r\n    if (targetSection) {\r\n      targetSection.classList.add('active');\r\n      targetSection.style.display = 'block';\r\n      \r\n      // Smooth scroll to top of section\r\n      window.scrollTo({\r\n        top: targetSection.offsetTop - 50,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n    \r\n    updateProgress();\r\n  };\r\n  \r\n  // Initialize form - show first section\r\n  const initForm = () => {\r\n    sections.forEach((section, index) => {\r\n      if (index === 0) {\r\n        section.classList.add('active');\r\n        section.style.display = 'block';\r\n      } else {\r\n        section.style.display = 'none';\r\n      }\r\n    });\r\n    \r\n    updateProgress();\r\n  };\r\n  \r\n  // Next button handler\r\n  nextButtons.forEach(button => {\r\n    button.addEventListener('click', () => {\r\n      if (currentSection < totalSections) {\r\n        currentSection++;\r\n        showSection(currentSection);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Previous button handler\r\n  prevButtons.forEach(button => {\r\n    button.addEventListener('click', () => {\r\n      if (currentSection > 1) {\r\n        currentSection--;\r\n        showSection(currentSection);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Final submit button handler\r\n  finalSubmitBtn.addEventListener('click', () => {\r\n    submitBtn.click(); // Trigger the actual form submission\r\n  });\r\n  \r\n  // Handle form submission\r\n  form.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      // Get all form data\r\n      const formData = new FormData(form);\r\n      const formDataObj = {};\r\n      \r\n      // Get checkbox values for \"help\" question (multiple selection)\r\n      const helpCheckboxes = document.querySelectorAll('input[name=\"help\"]:checked');\r\n      const helpValues = Array.from(helpCheckboxes).map(checkbox => checkbox.value);\r\n      \r\n      // Convert FormData to a regular object\r\n      formData.forEach((value, key) => {\r\n        // Skip \"help\" as we handle it separately\r\n        if (key !== \"help\") {\r\n          formDataObj[key] = value;\r\n        }\r\n      });\r\n      \r\n      // Add the \"help\" values as an array\r\n      formDataObj.help = helpValues;\r\n      \r\n      // Add timestamp\r\n      formDataObj.submittedAt = firebase.firestore.FieldValue.serverTimestamp();\r\n      \r\n      console.log(\"Submitting data to Firebase:\", formDataObj);\r\n      \r\n      // Save to Firestore\r\n      await db.collection('responses').add(formDataObj);\r\n      \r\n      console.log('Form data saved to Firebase successfully!');\r\n      \r\n      // Hide form\r\n      form.style.display = 'none';\r\n      \r\n      // Show thank you message\r\n      thankYou.style.display = 'block';\r\n      \r\n      // Update progress bar and text\r\n      progressFill.style.width = '100%';\r\n      progressText.textContent = 'Thank you for your voice!';\r\n      \r\n      // Scroll to top\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      \r\n    } catch (error) {\r\n      console.error('Error saving to Firebase:', error);\r\n      alert('There was an error submitting your response. Please try again later.');\r\n    }\r\n  });\r\n  \r\n  // Update slider values when moved\r\n  sliders.forEach(slider => {\r\n    const valueDisplay = document.querySelector(`.slider-value[data-slider=\"${slider.name}\"]`);\r\n    \r\n    slider.addEventListener('input', () => {\r\n      if (valueDisplay) {\r\n        valueDisplay.textContent = slider.value;\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Initialize form\r\n  initForm();\r\n});","// Petal animation for SheSpeaks 2025\r\n\r\nclass Petal {\r\n  constructor() {\r\n    this.x = Math.random() * window.innerWidth;\r\n    this.y = Math.random() * -100;\r\n    this.size = Math.random() * 15 + 5;\r\n    this.speed = Math.random() * 1 + 0.5;\r\n    this.rotation = Math.random() * 360;\r\n    this.rotationSpeed = (Math.random() - 0.5) * 2;\r\n    this.swingAmount = Math.random() * 3;\r\n    this.swingSpeed = Math.random() * 0.02;\r\n    this.swingOffset = Math.random() * Math.PI * 2;\r\n    this.opacity = Math.random() * 0.6 + 0.4;\r\n    this.hue = Math.random() * 30 + 330; // Pink hues\r\n  }\r\n\r\n  update() {\r\n    this.y += this.speed;\r\n    this.x += Math.sin(this.y * this.swingSpeed + this.swingOffset) * this.swingAmount;\r\n    this.rotation += this.rotationSpeed;\r\n\r\n    // Reset when off screen\r\n    if (this.y > window.innerHeight + 100) {\r\n      this.y = Math.random() * -100;\r\n      this.x = Math.random() * window.innerWidth;\r\n    }\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.save();\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate((this.rotation * Math.PI) / 180);\r\n    ctx.globalAlpha = this.opacity;\r\n    \r\n    // Create petal shape\r\n    ctx.beginPath();\r\n    ctx.fillStyle = `hsla(${this.hue}, 100%, 80%, ${this.opacity})`;\r\n    ctx.ellipse(0, 0, this.size, this.size / 2, 0, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    \r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nclass PetalAnimation {\r\n  constructor() {\r\n    this.canvas = document.createElement('canvas');\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.canvas.id = 'bg-canvas';\r\n    document.body.insertBefore(this.canvas, document.body.firstChild);\r\n    \r\n    this.petals = [];\r\n    this.init();\r\n    \r\n    window.addEventListener('resize', () => this.resize());\r\n    this.animate();\r\n  }\r\n  \r\n  init() {\r\n    this.resize();\r\n    \r\n    // Create petals\r\n    const numPetals = Math.floor(window.innerWidth / 15); // Adjust density\r\n    for (let i = 0; i < numPetals; i++) {\r\n      this.petals.push(new Petal());\r\n    }\r\n  }\r\n  \r\n  resize() {\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n  }\r\n  \r\n  animate() {\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    \r\n    this.petals.forEach(petal => {\r\n      petal.update();\r\n      petal.draw(this.ctx);\r\n    });\r\n    \r\n    requestAnimationFrame(() => this.animate());\r\n  }\r\n}\r\n\r\n// Start animation when DOM is loaded\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  new PetalAnimation();\r\n});"],"names":["$679004e59b84d8fa$var$Petal","x","Math","random","window","innerWidth","y","size","speed","rotation","rotationSpeed","swingAmount","swingSpeed","swingOffset","PI","opacity","hue","update","sin","innerHeight","draw","ctx","save","translate","rotate","globalAlpha","beginPath","fillStyle","ellipse","fill","restore","$679004e59b84d8fa$var$PetalAnimation","canvas","document","createElement","getContext","id","body","insertBefore","firstChild","petals","init","addEventListener","resize","animate","numPetals","floor","i","push","width","height","clearRect","forEach","petal","requestAnimationFrame","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","form","getElementById","sections","querySelectorAll","progressFill","progressText","thankYou","submitBtn","finalSubmitBtn","nextButtons","prevButtons","sliders","currentSection","totalSections","length","updateProgress","progressPercentage","style","textContent","showSection","sectionNumber","section","classList","remove","display","targetSection","querySelector","add","scrollTo","top","offsetTop","behavior","button","click","e","preventDefault","formData","FormData","formDataObj","helpCheckboxes","helpValues","Array","from","map","checkbox","value","key","help","submittedAt","FieldValue","serverTimestamp","console","log","collection","error","alert","slider","valueDisplay","name","index"],"version":3,"file":"SheSpeaks_2025_ACM-W.40ca248d.js.map"}